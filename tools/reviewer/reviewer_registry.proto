syntax = "proto3";
package com.google.startupos.tools.reviewer;

option java_package = "com.google.startupos.tools.reviewer";
option java_outer_classname = "Protos";

/* Config for a single repo. */
message Repo {
  // Url, e.g https://github.com/google/startup-os
  string url = 1;
  // ID, e.g startup-os. This is used as the folder name in the local workspace
  string id = 2;
}

/* Firebase config. The only field we probably need is project_id, but we're not
 * sure of that. */
message FirebaseConfig {
  // E.g AIzaSyAn-A7YXlqR2JNOvlbhkVwcnsOigmphQIw
  string api_key = 1;
  // E.g startupos-5f279.firebaseapp.com
  string auth_domain = 2;
  // E.g https://startupos-5f279.firebaseio.com
  string database_url = 3;
  // E.g startupos-5f279
  string project_id = 4;
  // E.g startupos-5f279.appspot.com
  string storage_bucket = 5;
  // E.g 160348327132
  string messaging_sender_id = 6;
}

/* Config for a Reviewer instance, stored in config_repo. */
message ReviewerConfig {
  // Display name for Reviewer instance. Should be same as
  // ReviewerRegistryConfig.display_name
  string display_name = 1;
  FirebaseConfig firebase_config = 2;
  // Repos in this Reviewer instance
  repeated Repo repo = 3;
}

/* Config for a Reviewer instance for a registry. */
message ReviewerRegistryConfig {
  // Display name for Reviewer instance. Should be same as
  // ReviewerConfig.display_name
  string display_name = 1;
  // Repo with .reviewer config folder
  string config_repo = 2;
  // URL of webapp
  string url = 3;
  // Default port for local server
  int32 default_port = 4;
}

/* Registry for Reviewer instances, to help in discovery. */
message ReviewerRegistry {
  repeated ReviewerRegistryConfig reviewer_config = 1;
}
