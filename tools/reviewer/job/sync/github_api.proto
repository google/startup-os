syntax = "proto3";

package com.google.startupos.tools.reviewer.job.sync;

option java_package = "com.google.startupos.tools.reviewer.job.sync";
option java_outer_classname = "GithubProtos";

import "tools/reviewer/job/sync/full_github_pr.proto";

// https://developer.github.com/v3/pulls/#get-a-single-pull-request
message PullRequestRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message PullRequestResponse { PullRequest pull_request = 1; }

// https://developer.github.com/v3/pulls/#create-a-pull-request
message CreatePullRequestRequest {
  string owner = 1;
  string repo = 2;
  CreatePullRequestRequestData request_data = 3;

  message CreatePullRequestRequestData {
    string title = 1;
    string head = 2;
    string base = 3;
    string body = 4;
  }
}

message CreatePullRequestResponse { PullRequest pull_request = 1; }

// https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue
message IssueCommentsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message IssueCommentsResponse { repeated IssueComment issue_comment = 1; }

// https://developer.github.com/v3/issues/comments/#create-a-comment
message CreateIssueCommentRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
  CreateIssueCommentRequestData request_data = 4;

  message CreateIssueCommentRequestData { string body = 1; }
}

// https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request
message ReviewsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message ReviewsResponse { repeated Review reviews = 1; }

// https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review
message ReviewCommentsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
  int64 review_id = 4;
}

message ReviewCommentsResponse { repeated ReviewComment review_comments = 1; }

// https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review
message CreatePullRequestReviewRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
  CreatePullRequestReviewRequestData request_data = 4;

  message CreatePullRequestReviewRequestData {
    string commit_id = 1;
    //  required field
    string body = 2;
    string event = 3;
    repeated ReviewCommentRequestData comments = 4;

    message ReviewCommentRequestData {
      string path = 1;
      int64 position = 2;
      string body = 3;
    }
  }
}

// https://developer.github.com/v3/repos/commits/#get-a-single-commit
message CommitRequest {
  string owner = 1;
  string repo = 2;
  string sha = 3;
}

message CommitResponse { CommitInfo commit = 1; }

// https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request
message CommitsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message CommitsResponse { repeated CommitInfo commits = 1; }

// https://developer.github.com/v3/users/#get-a-single-user
message UserRequest { string login = 1; }

message UserResponse { User user = 1; }