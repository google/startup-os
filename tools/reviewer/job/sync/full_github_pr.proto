syntax = "proto3";

package com.google.startupos.tools.reviewer.job.sync;

option java_package = "com.google.startupos.tools.reviewer.job.sync";
option java_outer_classname = "GithubPullRequestProtos";

message PullRequest {

  int64 id = 1;
  int64 number = 2;
  string state = 3;
  string title = 4;
  // Pull Request author
  User user = 5;
  string body = 6;
  string created_at = 7;
  string updated_at = 8;
  repeated Review reviews = 9;
  repeated IssueComment issueComment = 10;
  CommitPointer base = 11;
  CommitPointer head = 12;
  string repo = 13;
  repeated CommitInfo commits_info = 14;
}

message CommitPointer {
  string sha = 1;
  string ref = 2;
  User user = 3;
}

message Review {
  enum State {
    UNKNOWN = 0;
    APPROVED = 1;
    CHANGES_REQUESTED = 2;
    COMMENTED = 3;
    PENDING = 4;
  }

  int64 id = 1;
  // Review author
  User user = 2;
  // Required when using REQUEST_CHANGES or COMMENT for the event parameter. The
  // body text of the pull request review.
  string body = 3;
  string commit_id = 4;
  // APPROVE, REQUEST_CHANGES, or COMMENT. By leaving this blank, you set the
  // review action state to PENDING, which means you will need to submit the
  // pull request review when you are ready
  State state = 5;
  repeated ReviewComment review_comment = 6;
}

message ReviewComment {
  int64 id = 1;
  int64 pull_request_review_id = 2;
  string diff_hunk = 3;
  string path = 4;
  int32 position = 5;
  int32 original_position = 6;
  string commit_id = 7;
  string original_commit_id = 8;
  int32 in_reply_to_id = 9;
  // Review comment author
  User user = 10;
  string body = 11;
  string created_at = 12;
  string updated_at = 13;
}

message IssueComment {
  int64 id = 1;
  string body = 2;
  // Issue comment author. It's comment to whole pull request
  User user = 3;
  string created_at = 4;
  string updated_at = 5;
}

message User {
  string login = 1;
  int64 id = 2;
  string email = 3;
}

message CommitInfo {
  string sha = 1;
  Commit commit = 2;
  User author = 3;
  User committer = 4;
  repeated Tree parents = 5;
  repeated File files = 6;

  message Commit {
    User author = 1;
    User commiter = 2;
    string message = 3;
    Tree tree = 4;
    int32 comment_count = 5;

    message User {
      string name = 1;
      string email = 2;
      string date = 3;
    }
  }
  message Tree { string sha = 1; }

  message File {
    string filename = 1;
    int32 additions = 2;
    int32 deletions = 3;
    int32 changes = 4;
    string status = 5;
    string patch = 6;
  }
}
